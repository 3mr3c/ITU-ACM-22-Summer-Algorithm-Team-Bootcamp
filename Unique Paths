// Author: Emre Çelik
// Question Link: https://leetcode.com/problems/unique-paths/
// Reviewers: Ahmet Furkan Kavraz, Toygun Görmüş, Yaşar Ceren, Denis Davidoglu

/*
      3*7
 _ _ _ _ _ _ _
|_|_|_|_|_|_|_|
|_|_|_|_|_|_|_|    These matrixes will be filled with number of unique paths.
|_|_|_|_|_|_|_|

*/

class Solution {
public:
    int uniquePaths(int m, int n) {
        // Initialize ans matrix as an answer matrix.
        vector<vector<int>> ans(m, vector<int>(n, 1));
        
        // We start with i = 1 and j = 1 because there is only one way to reach borders of the matrix.
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                // Adding top and left neighbors of current position to find number of ways to reach where we are.
                ans[i][j] = ans[i - 1][j] + ans[i][j - 1];
            }
        }
        
        // Return number of ways to reach finish.
        return ans[m - 1][n - 1];
    }
};
